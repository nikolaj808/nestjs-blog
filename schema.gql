# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  """The comments ID (unique)"""
  id: Int!

  """The comments creation date"""
  createdAt: DateTime!

  """The comments last update date"""
  updatedAt: DateTime!

  """The comments content"""
  content: String!

  """The comments author"""
  commentor: User

  """The comment authors ID (unique)"""
  commentorId: Int!

  """The post that has been commented on"""
  post: Post

  """The post ID that was commented on (unique)"""
  postId: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  """The users ID (unique)"""
  id: Int!

  """The users creation date"""
  createdAt: DateTime!

  """The users last update date"""
  updatedAt: DateTime!

  """The users email (unique)"""
  email: String!

  """The users name"""
  name: String

  """Posts authored by the user"""
  posts: [Post!]

  """Comments authored by the user"""
  comments: [Comment!]
}

type Post {
  """The posts ID (unique)"""
  id: Int!

  """The posts creation date"""
  createdAt: DateTime!

  """The posts last update date"""
  updatedAt: DateTime!

  """The posts title"""
  title: String!

  """The posts content"""
  content: String

  """The posts published status"""
  published: Boolean!

  """The posts view count"""
  viewCount: Float!

  """The posts author"""
  author: User

  """The post authors ID (unique)"""
  authorId: Int!

  """The posts comments"""
  comments: [Comment!]
}

type Query {
  posts: [Post!]!
  post(id: Int!): Post
  comments: [Comment!]!
  comment(id: Int!): Comment
  users: [User!]!
  user(id: Int!): User
}

type Mutation {
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  removePost(id: Int!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: Int!): Comment!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User!
}

input CreatePostInput {
  """The posts title"""
  title: String!

  """The post authors ID (unique)"""
  authorId: Int!
}

input UpdatePostInput {
  """The posts title"""
  title: String

  """The posts ID (unique)"""
  id: Int!

  """The posts content"""
  content: String

  """The posts published status"""
  published: Boolean

  """The posts view count"""
  viewCount: Float
}

input CreateCommentInput {
  """The comments content"""
  content: String!

  """The comment authors ID (unique)"""
  commentorId: Int!

  """The post ID that was commented on (unique)"""
  postId: Int!
}

input UpdateCommentInput {
  """The comments content"""
  content: String

  """The comments ID (unique)"""
  id: Int!
}

input CreateUserInput {
  """The users email (unique)"""
  email: String!

  """The users name"""
  name: String
}

input UpdateUserInput {
  """The users email (unique)"""
  email: String

  """The users name"""
  name: String

  """The users ID (unique)"""
  id: Int!
}